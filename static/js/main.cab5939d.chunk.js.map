{"version":3,"sources":["containers/App/App.module.css","components/Header/Header.module.css","components/Form/Form.module.css","components/Header/Header.js","components/Form/Form.js","containers/App/App.js","components/AsyncCompnent/AsyncComponent.js","serviceWorker.js","index.js"],"names":["module","exports","header","props","heading","className","classes","Header","form","regionDataChanged","otherInputChanged","clicked","Form","htmlFor","onChange","required","data-region-name","type","name","id","placeholder","data-avg-age","data-avg-daily-income-in-usd","data-avg-daily-income-population","data-population","data-time-to-elapse","data-reported-cases","data-total-hospital-beds","data-period-type","defaultValue","value","onClick","data-go-estimate","App","formatNumber","x","toString","replace","regionalInputHandler","event","getInputValues","setState","prevState","data","region","otherInputHandler","estimate","input","state","avgAge","avgDailyIncomeInUSD","avgDailyIncomePopulation","periodType","timeToElapse","reportedCases","population","totalHospitalBeds","results","impact","severeImpact","target","getAttribute","Number","parseFloat","output","importComponent","this","Display","Standard","default","Component","format","Heading","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cab5939d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Heading\":\"App_Heading__2J-0I\",\"Loading\":\"App_Loading__1HeUi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__2boAo\"};","import React from 'react';\nimport classes from './Header.module.css';\n\nconst header = (props) => {\n  const { heading } = props;\n  return (\n    <div className={classes.Header}>\n      <h1 className={heading}>ESTIMATOR</h1>\n    </div>\n  );\n};\n\nexport default header;\n","import React from 'react';\n\nimport classes from './Form.module.css';\n\nconst form = (props) => {\n  const { regionDataChanged, otherInputChanged, clicked } = props;\n  return (\n    <div className={classes.Form}>\n      <h2 className=\"heading2\">Enter Data</h2>\n      <form className=\"MyForm\">\n        <div className=\"div\">\n          <div>\n            <label htmlFor=\"regionName\">Region Name</label>\n            <input\n              onChange={regionDataChanged}\n              required\n              data-region-name\n              type=\"text\"\n              name=\"name\"\n              id=\"regionName\"\n              placeholder=\"Example... Africa\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"avgAge\">Average Age</label>\n            <input\n              onChange={regionDataChanged}\n              required\n              data-avg-age\n              type=\"text\"\n              name=\"avgAge\"\n              id=\"avgAge\"\n              placeholder=\"Example... 19.7\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"avgDailyIncomeInUSD\">\n              Average Daily Income In US Dollar\n            </label>\n            <input\n              onChange={regionDataChanged}\n              required\n              data-avg-daily-income-in-usd\n              type=\"text\"\n              name=\"avgDailyIncomeInUSD\"\n              id=\"avgDailyIncomeInUSD\"\n              placeholder=\"Example... 5\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"avgDailyIncomePopulation\">\n              Average Daily Income Population\n            </label>\n            <input\n              onChange={regionDataChanged}\n              required\n              data-avg-daily-income-population\n              type=\"text\"\n              name=\"avgDailyIncomePopulation\"\n              id=\"avgDailyIncomePopulation\"\n              placeholder=\"Example... 0.71\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"population\">Population</label>\n            <input\n              onChange={otherInputChanged}\n              required\n              data-population\n              type=\"text\"\n              name=\"population\"\n              id=\"population\"\n              placeholder=\"Example... 66622705\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"timeToElapse\">Time to elapse</label>\n            <input\n              onChange={otherInputChanged}\n              required\n              data-time-to-elapse\n              type=\"text\"\n              name=\"timeToElapse\"\n              id=\"timeToElapse\"\n              placeholder=\"Example... 58\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"reportedCases\">Reported Cases</label>\n            <input\n              onChange={otherInputChanged}\n              required\n              data-reported-cases\n              type=\"text\"\n              name=\"reportedCases\"\n              placeholder=\"Example... 674\"\n              id=\"reportedCases\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"totalHospitalBeds\">Total Hospital Beds</label>\n            <input\n              onChange={otherInputChanged}\n              required\n              data-total-hospital-beds\n              type=\"text\"\n              name=\"totalHospitalBeds\"\n              placeholder=\"Example... 1380614\"\n              id=\"totalHospitalBeds\"\n            />\n          </div>\n          <div className=\"selection\">\n            <label htmlFor=\"periodType\">Period Type</label>\n            <select\n              onChange={otherInputChanged}\n              required\n              data-period-type\n              name=\"periodType\"\n              id=\"periodType\"\n            >\n              <option defaultValue value=\"days\">days</option>\n              <option value=\"weeks\">weeks</option>\n              <option value=\"months\">months</option>\n            </select>\n          </div>\n        </div>\n        <input\n          onClick={clicked}\n          data-go-estimate\n          type=\"submit\"\n          value=\"Estimate\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default form;\n","import React, { Component } from 'react';\nimport Header from '../../components/Header/Header';\nimport Form from '../../components/Form/Form';\nimport AsyncComponent from '../../components/AsyncCompnent/AsyncComponent';\n\nimport classes from './App.module.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: true,\n      data: {\n        region: {\n          name: null,\n          avgAge: null,\n          avgDailyIncomeInUSD: null,\n          avgDailyIncomePopulation: null\n        },\n        periodType: null,\n        timeToElapse: null,\n        reportedCases: null,\n        population: null,\n        totalHospitalBeds: null\n      },\n      results: {\n        data: {},\n        impact: {},\n        severeImpact: {}\n      }\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getInputValues(event) {\n    const name = event.target.getAttribute('name');\n    const value = Number.parseFloat(event.target.value) || event.target.value;\n    return { name, value };\n  }\n\n  formatNumber = (x) => (x ? x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : x);\n\n  regionalInputHandler = (event) => {\n    const { name, value } = this.getInputValues(event);\n    this.setState((prevState) => {\n      let { data } = prevState;\n      let { region } = data;\n      region = { ...region, ...{ [name]: value } };\n      data = { ...data, region };\n      return { data };\n    });\n  };\n\n  otherInputHandler = (event) => {\n    const { name, value } = this.getInputValues(event);\n    this.setState((prevState) => {\n      let { data } = prevState;\n      data = { ...data, ...{ [name]: value } };\n      return { data };\n    });\n  };\n\n  estimate = () => {\n    this.setState({ input: false });\n  }\n\n  render() {\n    const { input } = this.state;\n    const { results } = this.state;\n    let output;\n    if (input) {\n      output = (\n        <Form\n          regionDataChanged={this.regionalInputHandler}\n          otherInputChanged={this.otherInputHandler}\n          clicked={this.estimate}\n        />\n      );\n    } else {\n      const Display = AsyncComponent(() => import('../../components/Display/Display'));\n      output = (\n        <Display format={this.formatNumber} results={results} />\n      );\n    }\n    return (\n      <div className={classes.App}>\n        <Header heading={classes.Heading} />\n        {output}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Component } from 'react';\n\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        Standard: null\n      };\n    }\n\n    async componentDidMount() {\n      const { default: Standard } = await importComponent();\n      this.setState({ Standard });\n    }\n\n    render() {\n      const { Standard } = this.state;\n      return Standard ? <Standard {...this.props} /> : null;\n    }\n  }\n\n  return AsyncComponent;\n}\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}